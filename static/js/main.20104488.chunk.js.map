{"version":3,"sources":["styles/global.ts","services/history/history.ts","services/api.ts","services/ListService/ListService.ts","assets/MarvelLogo.png","pages/List/styles.ts","components/DetailModal/styles.ts","components/DetailModal/DetailModal.tsx","components/EmailModal/styles.ts","components/Input/styles.ts","components/Input/Input.tsx","components/EmailTemplate/EmailTemplate.tsx","components/Toast/styles.ts","styles/theme.ts","components/Toast/Toast.tsx","schemas/schema.base.ts","schemas/EmailModalSchema.ts","components/EmailModal/EmailModal.tsx","components/Loader/styles.ts","components/Loader/Loader.tsx","pages/List/List.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","createBrowserHistory","publicKey","process","ts","Number","Date","hash","md5","api","axios","create","baseURL","params","apikey","get","ArrowIcon","styled","div","theme","colors","white","className","Logo","img","CharacterRow","inputState","length","css","red","Comics","redVariant","ComicsImage","mobile","ComicsDescription","textWhite","ComicsDetails","Header","Input","input","FooterButton","Button","button","buttonRed","loading","opacityBackground","Container","props","showEmailModal","showModal","Title","Divider","CloseButton","ModalContent","ImageDiv","Image","Background","InfoDiv","TextInfoWrapper","TitleInfo","p","TextInfo","FirstRow","SecondRow","Description","DetailModal","id","closeModal","comicDetail","writer","creators","items","find","item","role","penciller","pencillerCover","onClick","e","target","size","title","src","thumbnail","path","extension","alt","dates","date","split","name","description","InputRow","ButtonDiv","ErrorText","iconDir","Label","label","textBlack","InputContainer","Icon","icon","iconClass","rest","String","EmailTemplate","selecteds","renderWriter","map","renderPenciller","renderPencillerCover","selected","index","style","marginTop","padding","width","borderRadius","background","display","fontWeight","color","fontSize","height","textIndent","textAlign","maxWidth","Toast","ToastContainer","showToast","type","message","toastify","success","error","info","ToastAnimated","toastClassName","position","autoClose","hideProgressBar","limit","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Yup","mixed","default","required","EmailModalSchema","yup","shape","email","EmailModal","onSubmit","handleSubmit","values","emailPromise","send","subject","to_email","renderToStaticMarkup","then","promiseName","pendingMessage","successMessage","errorMessage","promise","pending","showToastPromise","validationSchema","initialValues","a","AiOutlineUser","placeholder","onChange","handleChange","errors","AiOutlineMail","Loader","List","useState","comics","setComics","setComicDetail","searchComics","setSearchComics","setShowModal","setShowEmailModal","scrollX","setScrollX","setLoading","setSelecteds","useEffect","ListService","res","data","results","finally","catch","MarvelLogo","value","marginLeft","windowX","Math","round","window","innerWidth","listWidth","filter","comic","toLowerCase","includes","nodeName","handleSetSelected","handleOpenDetails","Routes","basename","element","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.20104488.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n  margin: 0;\r\n  padding: 0;\r\n  outline: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  font: 400 14px Marvel, sans-serif;\r\n  background: #f0f0f5;\r\n}\r\n\r\ninput,\r\nbutton {\r\n  font: 400 18px;\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n\r\n`;\r\n","import { createBrowserHistory } from \"history\";\r\nexport const history = createBrowserHistory();\r\n","import axios from \"axios\";\r\nimport md5 from \"md5\";\r\n\r\nconst publicKey = process.env.REACT_APP_PUBLIC_KEY;\r\nconst privateKey: any = process.env.REACT_APP_PRIVATE_KEY;\r\n\r\nconst ts = Number(new Date());\r\n\r\nconst hash = md5(ts + privateKey + publicKey);\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_BASE_URL,\r\n  params: {\r\n    ts,\r\n    apikey: publicKey,\r\n    hash,\r\n  },\r\n});\r\n\r\nexport default api;\r\n","import api from \"../api\";\r\n\r\nconst getComics = () => {\r\n  return api.get(\"/comics\");\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getComics,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/MarvelLogo.e0f65ae8.png\";","import styled, { css } from \"styled-components\";\r\nimport { ComicsPropsStyled, ListPropsStyled } from \"./ListTypes\";\r\n\r\nexport const ArrowIcon = styled.div`\r\n  position: absolute;\r\n  width: 40px;\r\n  height: 350px;\r\n  background-color: rgba(0, 0, 0, 0.6);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n  opacity: 0;\r\n  z-index: 2;\r\n  transition: all ease 0.5s;\r\n\r\n  svg {\r\n    width: 50px;\r\n    height: 50px;\r\n    fill: ${({ theme }) => theme.colors.white};\r\n  }\r\n\r\n  ${({ className }) =>\r\n    className === \"arrow-left\" &&\r\n    `\r\n    left: 0;\r\n  `}\r\n\r\n  ${({ className }) =>\r\n    className === \"arrow-right\" &&\r\n    `\r\n    right: 0;\r\n  `}\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  width: 200px;\r\n`;\r\n\r\nexport const CharacterRow = styled.div<ListPropsStyled>`\r\n  display: flex;\r\n  gap: 20px;\r\n  overflow-x: scroll;\r\n  margin-top: 40px;\r\n  padding: 20px;\r\n  transition: all ease 0.5s;\r\n\r\n  ${({ inputState }) =>\r\n    inputState?.length !== 0 &&\r\n    css`\r\n      ${ArrowIcon} {\r\n        display: none;\r\n      }\r\n    `}\r\n\r\n  :hover {\r\n    ${ArrowIcon} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n\r\n  .selected {\r\n    transform: translateY(-15px);\r\n    border: 3px solid ${({ theme }) => theme.colors.red};\r\n    box-shadow: -2px 2px 0px 2px ${({ theme }) => theme.colors.red};\r\n    :hover {\r\n      box-shadow: -2px 2px 0px 2px ${({ theme }) => theme.colors.red};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Comics = styled.div<ComicsPropsStyled>`\r\n  width: 180px;\r\n  border: 3px solid ${({ theme }) => theme.colors.white};\r\n  border-radius: 0px 0px 20px 0px;\r\n  background: ${({ theme }) => theme.colors.redVariant};\r\n  cursor: pointer;\r\n  transition: all ease 0.2s;\r\n\r\n  :hover {\r\n    box-shadow: -2px 2px 0px 2px ${({ theme }) => theme.colors.white};\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nexport const ComicsImage = styled.div`\r\n  display: flex;\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 230px;\r\n  }\r\n`;\r\n\r\nconst mobile = css`\r\n  ${ComicsImage} {\r\n    img {\r\n      height: 100px;\r\n    }\r\n  }\r\n  ${ArrowIcon} {\r\n    height: 220px;\r\n  }\r\n`;\r\n\r\nexport const ComicsDescription = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  gap: 10px;\r\n\r\n  strong {\r\n    font-size: 18px;\r\n  }\r\n\r\n  p {\r\n    font-size: 16px;\r\n  }\r\n\r\n  p,\r\n  strong {\r\n    color: ${({ theme }) => theme.colors.textWhite};\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  span {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ComicsDetails = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  gap: 5px;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    width: 32px;\r\n    transition: 0.2s;\r\n    fill: ${({ theme }) => theme.colors.textWhite};\r\n  }\r\n\r\n  svg:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: 50px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 320px;\r\n  height: 35px;\r\n  border-radius: 20px;\r\n  text-indent: 20px;\r\n  border: 1px transparent;\r\n  box-shadow: 0px 0px 6px 1px #d0d1d5;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const FooterButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 20px;\r\n`;\r\n\r\nexport const Button = styled.button<ListPropsStyled>`\r\n  padding: 20px;\r\n  background: ${({ theme }) => theme.colors.buttonRed};\r\n  border: 0;\r\n  border-radius: 20px;\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  transition: all ease 0.2s;\r\n\r\n  ${({ loading }) =>\r\n    loading &&\r\n    css`\r\n      display: none;\r\n    `}\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst opacityBackground = css`\r\n  ${Input} {\r\n    opacity: 0.2;\r\n  }\r\n  ${CharacterRow} {\r\n    opacity: 0.2;\r\n  }\r\n  ${Button} {\r\n    opacity: 0.2;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div<ListPropsStyled>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #202020;\r\n  min-height: 100vh;\r\n  overflow: hidden;\r\n\r\n  ${(props) =>\r\n    (props.showEmailModal || props.showModal) &&\r\n    css`\r\n      ${opacityBackground}\r\n    `}\r\n\r\n  @media screen and (max-width: 540px) and (max-height: 719px) {\r\n    ${mobile}\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Title = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  color: ${({ theme }) => theme.colors.textWhite};\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const Divider = styled.div`\r\n  border-top: 1px solid ${({ theme }) => theme.colors.white};\r\n  margin: 20px 0;\r\n`;\r\n\r\nexport const CloseButton = styled.div`\r\n  display: flex;\r\n  justify-content: end;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.red};\r\n    transition: 0.2s;\r\n    cursor: pointer;\r\n  }\r\n\r\n  svg:hover {\r\n    width: 32px;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  display: flex;\r\n  margin-top: 45px;\r\n`;\r\n\r\nexport const ImageDiv = styled.div``;\r\n\r\nexport const Image = styled.img`\r\n  width: 305px;\r\n  height: 500px;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 25px;\r\n  background: white;\r\n  border-radius: 20px;\r\n  background: #202020;\r\n  box-shadow: 0px 0px 10px 1px ${({ theme }) => theme.colors.white};\r\n`;\r\n\r\nconst mobile = css`\r\n  ${Image} {\r\n    display: none;\r\n  }\r\n  ${Container} {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nexport const Background = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1;\r\n\r\n  @media screen and (max-width: 540px) and (max-height: 719px) {\r\n    ${mobile}\r\n  }\r\n`;\r\n\r\nexport const InfoDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-indent: 50px;\r\n`;\r\n\r\nexport const TextInfoWrapper = styled.div``;\r\n\r\nexport const TitleInfo = styled.p`\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  color: ${({ theme }) => theme.colors.textWhite};\r\n`;\r\n\r\nexport const TextInfo = styled.p`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  color: #e7e7e7;\r\n  display: flex;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\nexport const FirstRow = styled.div`\r\n  display: flex;\r\n  /* gap: 80px; */\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const SecondRow = styled.div`\r\n  display: flex;\r\n  margin-top: 30px;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  color: #ffffff;\r\n  display: flex;\r\n  text-align: left;\r\n  max-width: 380px;\r\n  text-indent: 0px;\r\n  padding: 20px 50px;\r\n\r\n  p {\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { ModalProps } from \"./DetailModalTypes\";\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst DetailModal = ({\r\n  id = \"detailModal\",\r\n  closeModal,\r\n  comicDetail,\r\n}: ModalProps) => {\r\n  const writer = comicDetail?.creators.items.find(\r\n    (item: any) => item.role === \"writer\"\r\n  );\r\n\r\n  const penciller = comicDetail?.creators.items.find(\r\n    (item: any) => item.role === \"penciller\"\r\n  );\r\n\r\n  const pencillerCover = comicDetail?.creators.items.find(\r\n    (item: any) => item.role === \"penciller (cover)\"\r\n  );\r\n\r\n  const handleOutsideClick = (e: any) => {\r\n    if (e.target.id === id) {\r\n      closeModal(false);\r\n    }\r\n  };\r\n  return (\r\n    <S.Background id={id} onClick={handleOutsideClick}>\r\n      <S.Container>\r\n        <S.CloseButton>\r\n          <AiOutlineCloseCircle\r\n            onClick={() => {\r\n              closeModal(false);\r\n            }}\r\n            size={35}\r\n          />\r\n        </S.CloseButton>\r\n\r\n        <S.Title>\r\n          <h1>{comicDetail?.title}</h1>\r\n        </S.Title>\r\n        <S.Divider />\r\n\r\n        <S.ModalContent>\r\n          <S.ImageDiv>\r\n            <S.Image\r\n              src={`${comicDetail?.thumbnail.path}.${comicDetail?.thumbnail.extension}`}\r\n              alt=\"\"\r\n            />\r\n          </S.ImageDiv>\r\n\r\n          <S.InfoDiv>\r\n            <S.TextInfoWrapper>\r\n              <S.TitleInfo>Published:</S.TitleInfo>\r\n              <S.TextInfo>\r\n                {comicDetail?.dates[0].date.split(\"T\")[0]}\r\n              </S.TextInfo>\r\n            </S.TextInfoWrapper>\r\n\r\n            <S.FirstRow>\r\n              <S.TextInfoWrapper>\r\n                <S.TitleInfo>Writer:</S.TitleInfo>\r\n                <S.TextInfo>\r\n                  {writer ? writer.name : \"No information available\"}\r\n                </S.TextInfo>\r\n              </S.TextInfoWrapper>\r\n\r\n              <S.TextInfoWrapper>\r\n                <S.TitleInfo>Penciler:</S.TitleInfo>\r\n                <S.TextInfo>\r\n                  {penciller ? penciller.name : \"No information available\"}\r\n                </S.TextInfo>\r\n              </S.TextInfoWrapper>\r\n            </S.FirstRow>\r\n\r\n            <S.SecondRow>\r\n              <S.TextInfoWrapper>\r\n                <S.TitleInfo>Cover Artist:</S.TitleInfo>\r\n                <S.TextInfo>\r\n                  {pencillerCover\r\n                    ? pencillerCover.name\r\n                    : \"No information available\"}\r\n                </S.TextInfo>\r\n              </S.TextInfoWrapper>\r\n            </S.SecondRow>\r\n\r\n            <S.Description>\r\n              <p>\r\n                {comicDetail?.description ? comicDetail.description : \"...\"}\r\n              </p>\r\n            </S.Description>\r\n          </S.InfoDiv>\r\n        </S.ModalContent>\r\n      </S.Container>\r\n    </S.Background>\r\n  );\r\n};\r\n\r\nexport default DetailModal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Background = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 25px;\r\n  background: white;\r\n  border-radius: 20px;\r\n  background: #202020;\r\n  box-shadow: 0px 0px 10px 1px ${({ theme }) => theme.colors.white};\r\n`;\r\n\r\nexport const InputRow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  gap: 40px;\r\n`;\r\n\r\nexport const ButtonDiv = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  padding-top: 20px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 15px;\r\n  width: 150px;\r\n  background: ${({ theme }) => theme.colors.buttonRed};\r\n  border: 0;\r\n  border-radius: 20px;\r\n  color: white;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  transition: all ease 0.2s;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport const CloseButton = styled.div`\r\n  display: flex;\r\n  justify-content: end;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.red};\r\n    transition: 0.2s;\r\n    cursor: pointer;\r\n  }\r\n\r\n  svg:hover {\r\n    width: 32px;\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport const ErrorText = styled.p`\r\n  color: #ff4048;\r\n  font-size: 16px;\r\n  text-indent: 30px;\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\nimport { InputPropsStyled } from \"./InputTypes\";\r\n\r\nexport const Container = styled.div<InputPropsStyled>`\r\n  display: flex;\r\n  position: relative;\r\n  flex-direction: column;\r\n  justify-content: left;\r\n  * {\r\n    outline: 0;\r\n  }\r\n\r\n  input,\r\n  label {\r\n    margin: 0.4rem 0;\r\n  }\r\n\r\n  .icon {\r\n    position: absolute;\r\n    width: 25px;\r\n    height: 25px;\r\n    border-right: 1px solid #202020;\r\n    width: 35px;\r\n\r\n    ${(props) =>\r\n      props.iconDir === \"right\"\r\n        ? css`\r\n            right: 20px;\r\n          `\r\n        : css`\r\n            left: 20px;\r\n          `}\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: block;\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n  color: ${({ theme }) => theme.colors.textWhite};\r\n`;\r\n\r\nexport const Input = styled.input<InputPropsStyled>`\r\n  width: 300px;\r\n  height: 40px;\r\n  box-shadow: 0px 1px 5px 1px #d0d1d5;\r\n  border: 1px solid #d0d1d5;\r\n  border-radius: 25px;\r\n  text-indent: 35px;\r\n  font-size: 14px;\r\n  color: ${({ theme }) => theme.colors.textBlack};\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.colors.textBlack};\r\n  }\r\n\r\n  ${(props) =>\r\n    props.iconDir === \"left\" &&\r\n    css`\r\n      text-indent: 60px;\r\n    `}\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n","import { InputProps } from \"./InputTypes\";\r\nimport * as S from \"./styles\";\r\n\r\nconst Input = ({\r\n  label,\r\n  icon: Icon,\r\n  iconDir = \"left\",\r\n  iconClass,\r\n  ...rest\r\n}: InputProps): JSX.Element => {\r\n  return (\r\n    <S.Container iconDir={iconDir}>\r\n      <S.Label>{label}</S.Label>\r\n      <S.InputContainer>\r\n        {Icon && <Icon className={`icon ${String(iconClass)}`} />}\r\n        <S.Input iconDir={iconDir} {...rest} />\r\n      </S.InputContainer>\r\n    </S.Container>\r\n  );\r\n};\r\nexport default Input;\r\n","import React from \"react\";\r\nimport { EmailTemplateProps } from \"./EmailTemplateTypes\";\r\n\r\nconst EmailTemplate = ({ selecteds }: EmailTemplateProps) => {\r\n  const renderWriter = () => {\r\n    const writer = selecteds.map((item: any) =>\r\n      item.creators.items.find((item: any) => item.role === \"writer\")\r\n    );\r\n    return writer[0] ? writer[0].name : \"No information available\";\r\n  };\r\n\r\n  const renderPenciller = () => {\r\n    const penciller = selecteds.map((item: any) =>\r\n      item.creators.items.find((item: any) => item.role === \"penciller\")\r\n    );\r\n    return penciller[0] ? penciller[0].name : \"No information available\";\r\n  };\r\n\r\n  const renderPencillerCover = () => {\r\n    const pencillerCover = selecteds.map((item: any) =>\r\n      item.creators.items.find((item: any) => item.role === \"penciller (cover)\")\r\n    );\r\n    return pencillerCover[0]\r\n      ? pencillerCover[0].name\r\n      : \"No information available\";\r\n  };\r\n  return (\r\n    <div>\r\n      {selecteds.map((selected, index: number) => (\r\n        <div\r\n          style={{\r\n            marginTop: \"20px\",\r\n            padding: \"25px\",\r\n            width: \"50vw\",\r\n            borderRadius: \"20px\",\r\n            background: \"#202020\",\r\n          }}\r\n          key={index}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              fontWeight: \"bold\",\r\n              color: \"#ffffff\",\r\n              marginTop: \"20px\",\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            {selected?.title}\r\n          </div>\r\n          <div style={{ display: \"flex\", marginTop: \"45px\" }}>\r\n            <div>\r\n              <img\r\n                src={`${selected?.thumbnail.path}.${selected?.thumbnail.extension}`}\r\n                alt=\"\"\r\n                style={{ width: \"305px\", height: \"500px\" }}\r\n              />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                textIndent: \"50px\",\r\n              }}\r\n            >\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    fontSize: \"24px\",\r\n                    fontWeight: \"bold\",\r\n                    color: \"#ffffff\",\r\n                  }}\r\n                >\r\n                  Published:\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    color: \"#e7e7e7\",\r\n                  }}\r\n                >\r\n                  {selected?.dates[0].date.split(\"T\")[0]}\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ display: \"flex\", marginTop: \"30px\" }}>\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      fontSize: \"24px\",\r\n                      fontWeight: \"bold\",\r\n                      color: \"#ffffff\",\r\n                    }}\r\n                  >\r\n                    Writer:\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      fontSize: \"16px\",\r\n                      color: \"#e7e7e7\",\r\n                    }}\r\n                  >\r\n                    {renderWriter()}\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      fontSize: \"24px\",\r\n                      fontWeight: \"bold\",\r\n                      color: \"#ffffff\",\r\n                    }}\r\n                  >\r\n                    Penciler:\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      fontSize: \"16px\",\r\n                      color: \"#e7e7e7\",\r\n                    }}\r\n                  >\r\n                    {renderPenciller()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div style={{ display: \"flex\", marginTop: \"30px\" }}>\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      fontSize: \"24px\",\r\n                      fontWeight: \"bold\",\r\n                      color: \"#ffffff\",\r\n                    }}\r\n                  >\r\n                    Cover Artist:\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      fontSize: \"16px\",\r\n                      color: \"#e7e7e7\",\r\n                    }}\r\n                  >\r\n                    {renderPencillerCover()}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                style={{\r\n                  color: \"#ffffff\",\r\n                  display: \"flex\",\r\n                  textAlign: \"left\",\r\n                  maxWidth: \"380px\",\r\n                  textIndent: \"0px\",\r\n                  padding: \"20px 50px\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"16px\", fontWeight: \"bold\" }}>\r\n                  {selected?.description ? selected.description : \"...\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailTemplate;\r\n","import styled from \"styled-components\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nexport const Toast = styled(ToastContainer)`\r\n  .Toastify__toast {\r\n    @media only screen and (max-width: 480px) {\r\n      background: #202020;\r\n    }\r\n  }\r\n`;\r\n","export const theme = {\r\n  colors: {\r\n    //primarias\r\n    white: \"#FFFFFF\",\r\n    red: \"#f0141e\",\r\n    redVariant: \"#740000\",\r\n\r\n    //textos\r\n    textWhite: \"#FFFFFF\",\r\n    textBlack: \"#202020\",\r\n\r\n    // botões\r\n    buttonRed: \"#740000\",\r\n  },\r\n} as const;\r\n\r\nexport type Theme = typeof theme;\r\n","import React from \"react\";\r\n\r\nimport { toast as toastify } from \"react-toastify\";\r\n\r\nimport { Toast } from \"./styles\";\r\n\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { theme } from \"../../styles/theme\";\r\n\r\ninterface toastProps {\r\n  type: string;\r\n  message: string;\r\n}\r\n\r\ninterface toastPromiseProps {\r\n  promiseName: Promise<any>;\r\n  pendingMessage: string;\r\n  successMessage: string;\r\n  errorMessage: string;\r\n}\r\n\r\nexport const showToastPromise = ({\r\n  promiseName,\r\n  pendingMessage,\r\n  successMessage,\r\n  errorMessage,\r\n}: toastPromiseProps) => {\r\n  toastify.promise(promiseName, {\r\n    pending: pendingMessage,\r\n    success: successMessage,\r\n    error: errorMessage,\r\n  });\r\n};\r\n\r\nexport const showToast = ({ type, message }: toastProps) => {\r\n  switch (type) {\r\n    case \"success\":\r\n      toastify.success(message);\r\n      break;\r\n    case \"error\":\r\n      toastify.error(message);\r\n      break;\r\n    case \"info\":\r\n      toastify.info(message);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default function ToastAnimated() {\r\n  return (\r\n    <Toast\r\n      toastClassName=\"toastBody\"\r\n      position=\"top-right\"\r\n      autoClose={5000}\r\n      hideProgressBar={false}\r\n      limit={1}\r\n      closeOnClick\r\n      rtl={false}\r\n      pauseOnFocusLoss\r\n      draggable\r\n      pauseOnHover\r\n      theme={theme}\r\n    />\r\n  );\r\n}\r\n","import * as Yup from \"yup\";\r\nconst error = \"Campo obrigatório\";\r\nYup.setLocale({\r\n  mixed: {\r\n    default: error,\r\n    required: error,\r\n  },\r\n});\r\n","import * as yup from \"yup\";\r\n\r\nexport const EmailModalSchema = yup.object().shape({\r\n  name: yup.string().required(),\r\n  email: yup.string().email(\"Digite um e-mail válido\").required(),\r\n});\r\n","import React from \"react\";\r\nimport { EmailModalProps } from \"./EmailModalProps\";\r\nimport {\r\n  AiOutlineCloseCircle,\r\n  AiOutlineMail,\r\n  AiOutlineUser,\r\n} from \"react-icons/ai\";\r\n\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\n\r\nimport { send } from \"emailjs-com\";\r\n\r\nimport * as S from \"./styles\";\r\nimport Input from \"../Input/Input\";\r\nimport EmailTemplate from \"../EmailTemplate/EmailTemplate\";\r\n\r\nimport { showToastPromise } from \"../Toast/Toast\";\r\nimport { Form, Formik, FormikValues } from \"formik\";\r\nimport { EmailModalSchema } from \"../../schemas\";\r\n\r\nconst EmailModal = ({\r\n  id = \"modal\",\r\n  closeModal,\r\n  selecteds,\r\n  onSubmit,\r\n}: EmailModalProps) => {\r\n  const handleOutsideClick = (e: any) => {\r\n    if (e.target.id === id) {\r\n      closeModal(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (values: FormikValues) => {\r\n    const emailPromise = send(\r\n      process.env.REACT_APP_EMAIL_SERVICE as string,\r\n      process.env.REACT_APP_EMAIL_TEMPLATEID as string,\r\n      {\r\n        subject: \"Comics\",\r\n        name: values.name,\r\n        to_email: values.email,\r\n        message: renderToStaticMarkup(<EmailTemplate selecteds={selecteds} />),\r\n      },\r\n      process.env.REACT_APP_EMAIL_USER_ID\r\n    ).then(() => {\r\n      showToastPromise({\r\n        promiseName: emailPromise,\r\n        successMessage: \"Email successfully sent!\",\r\n        pendingMessage: \"Sending email...\",\r\n        errorMessage: \"Failed to send email!\",\r\n      });\r\n      closeModal(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <S.Background id={id} onClick={handleOutsideClick}>\r\n      <S.Container>\r\n        <S.CloseButton>\r\n          <AiOutlineCloseCircle\r\n            onClick={() => {\r\n              closeModal(false);\r\n            }}\r\n            size={35}\r\n          />\r\n        </S.CloseButton>\r\n\r\n        <Formik\r\n          validationSchema={EmailModalSchema}\r\n          initialValues={{ name: \"\", email: \"\" }}\r\n          onSubmit={async (values) => {\r\n            onSubmit && onSubmit(values);\r\n\r\n            await handleSubmit(values);\r\n          }}\r\n        >\r\n          {(props) => (\r\n            <S.InputRow>\r\n              <Form onSubmit={props.handleSubmit}>\r\n                <Input\r\n                  data-testid=\"name\"\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  label=\"Name\"\r\n                  icon={AiOutlineUser}\r\n                  placeholder=\"Enter your name\"\r\n                  onChange={props.handleChange}\r\n                />\r\n                {props.errors.name && (\r\n                  <S.ErrorText>{props.errors.name}</S.ErrorText>\r\n                )}\r\n\r\n                <Input\r\n                  data-testid=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  label=\"E-mail\"\r\n                  icon={AiOutlineMail}\r\n                  placeholder=\"Enter your e-mail\"\r\n                  onChange={props.handleChange}\r\n                />\r\n                {props.errors.email && (\r\n                  <S.ErrorText>{props.errors.email}</S.ErrorText>\r\n                )}\r\n                <S.ButtonDiv>\r\n                  <S.Button type=\"submit\">Send</S.Button>\r\n                </S.ButtonDiv>\r\n              </Form>\r\n            </S.InputRow>\r\n          )}\r\n        </Formik>\r\n      </S.Container>\r\n    </S.Background>\r\n  );\r\n};\r\n\r\nexport default EmailModal;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Loader = styled.div`\r\n  display: inline-block;\r\n  position: relative;\r\n  width: 80px;\r\n  height: 80px;\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n    display: block;\r\n    position: absolute;\r\n    width: 64px;\r\n    height: 64px;\r\n    margin: 8px;\r\n    border: 8px solid #fff;\r\n    border-radius: 50%;\r\n    animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\r\n    border-color: #fff transparent transparent transparent;\r\n  }\r\n  :nth-child(1) {\r\n    animation-delay: -0.45s;\r\n  }\r\n  :nth-child(2) {\r\n    animation-delay: -0.3s;\r\n  }\r\n  :nth-child(3) {\r\n    animation-delay: -0.15s;\r\n  }\r\n  @keyframes lds-ring {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  top: 0;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport * as S from \"./styles\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <S.Container>\r\n      <S.Loader>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </S.Loader>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ListService } from \"../../services\";\r\nimport { ComicDetailProps, ComicsProps } from \"./ListTypes\";\r\nimport { MdPageview } from \"react-icons/md\";\r\n\r\nimport { MdNavigateBefore, MdNavigateNext } from \"react-icons/md\";\r\n\r\nimport MarvelLogo from \"../../assets/MarvelLogo.png\";\r\n\r\nimport * as S from \"./styles\";\r\nimport DetailModal from \"../../components/DetailModal/DetailModal\";\r\nimport EmailModal from \"../../components/EmailModal/EmailModal\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { showToast } from \"../../components/Toast/Toast\";\r\n\r\nconst List: React.FC = () => {\r\n  const [comics, setComics] = useState<ComicsProps[]>([]);\r\n  const [comicDetail, setComicDetail] = useState<ComicDetailProps>();\r\n  const [searchComics, setSearchComics] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showEmailModal, setShowEmailModal] = useState(false);\r\n  const [scrollX, setScrollX] = useState(0);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [selecteds, setSelecteds] = useState<ComicsProps[]>([]);\r\n\r\n  useEffect(() => {\r\n    ListService.getComics()\r\n      .then((res) => {\r\n        setComics(res.data.data.results);\r\n      })\r\n      .finally(() => setLoading(false))\r\n      .catch(() =>\r\n        showToast({ type: \"error\", message: \"Failed to load comics!\" })\r\n      );\r\n  }, []);\r\n\r\n  const handleOpenDetails = (comic: any) => {\r\n    setComicDetail(comic);\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const handleOpenEmailModal = () => {\r\n    if (selecteds.length > 0) {\r\n      setShowEmailModal(!showEmailModal);\r\n    } else {\r\n      showToast({ type: \"info\", message: \"Choose a comic first!\" });\r\n    }\r\n  };\r\n\r\n  const handleLeftArrow = () => {\r\n    let windowX = scrollX + Math.round(window.innerWidth / 2);\r\n    if (windowX > 0) {\r\n      windowX = 0;\r\n    }\r\n    setScrollX(windowX);\r\n  };\r\n\r\n  const handleRightArrow = () => {\r\n    let windowX = scrollX - Math.round(window.innerWidth / 2);\r\n    let listWidth = comics.length * 200;\r\n    if (window.innerWidth - listWidth > windowX) {\r\n      windowX = window.innerWidth - listWidth;\r\n    }\r\n    setScrollX(windowX);\r\n  };\r\n\r\n  const handleSetSelected = (e: any, comics: ComicsProps) => {\r\n    if (\r\n      !selecteds.find((selecteds) => selecteds.id === comics.id) &&\r\n      e.target.nodeName !== \"path\" &&\r\n      \"svg\"\r\n    ) {\r\n      setSelecteds((selecteds: any) => [...selecteds, comics]);\r\n    } else {\r\n      setSelecteds(selecteds.filter((selected) => selected.id !== comics.id));\r\n    }\r\n  };\r\n\r\n  const toggleActiveStyles = (index: number) => {\r\n    return selecteds.find((selecteds) => selecteds.id === index) && \"selected\";\r\n  };\r\n\r\n  return (\r\n    <S.Container showModal={showModal} showEmailModal={showEmailModal}>\r\n      <S.Header>\r\n        <S.Logo src={MarvelLogo} alt=\"marvel logo\" />\r\n        <S.Input\r\n          type=\"text\"\r\n          placeholder=\"Search comics\"\r\n          onChange={(e) => {\r\n            setSearchComics(e.target.value);\r\n          }}\r\n        />\r\n      </S.Header>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <S.CharacterRow\r\n          showModal={showModal}\r\n          showEmailModal={showEmailModal}\r\n          style={{ marginLeft: scrollX, width: comics.length * 200 }}\r\n          inputState={searchComics}\r\n        >\r\n          <S.ArrowIcon className=\"arrow-left\" onClick={handleLeftArrow}>\r\n            <MdNavigateBefore />\r\n          </S.ArrowIcon>\r\n\r\n          <S.ArrowIcon className=\"arrow-right\" onClick={handleRightArrow}>\r\n            <MdNavigateNext />\r\n          </S.ArrowIcon>\r\n          {comics\r\n            .filter((comic) => {\r\n              if (\r\n                comic.title.toLowerCase().includes(searchComics.toLowerCase())\r\n              ) {\r\n                return comic;\r\n              }\r\n              return null;\r\n            })\r\n            .map((comic) => {\r\n              return (\r\n                <S.Comics\r\n                  key={comic.id}\r\n                  className={toggleActiveStyles(comic.id)}\r\n                  onClick={(e) => {\r\n                    handleSetSelected(e, comic);\r\n                  }}\r\n                >\r\n                  <S.ComicsImage>\r\n                    <img\r\n                      src={`${comic.thumbnail.path}.${comic.thumbnail.extension}`}\r\n                      alt=\"comics\"\r\n                    />\r\n                  </S.ComicsImage>\r\n\r\n                  <S.ComicsDescription>\r\n                    <strong>{comic.title}</strong>\r\n                    <p>{comic.description ? comic.description : \"...\"}</p>\r\n                    <S.ComicsDetails>\r\n                      <MdPageview\r\n                        size={32}\r\n                        onClick={() => {\r\n                          handleOpenDetails(comic);\r\n                        }}\r\n                      />\r\n                    </S.ComicsDetails>\r\n                  </S.ComicsDescription>\r\n                </S.Comics>\r\n              );\r\n            })}\r\n        </S.CharacterRow>\r\n      )}\r\n      {showModal && (\r\n        <DetailModal closeModal={setShowModal} comicDetail={comicDetail} />\r\n      )}\r\n\r\n      {showEmailModal && (\r\n        <EmailModal closeModal={setShowEmailModal} selecteds={selecteds} />\r\n      )}\r\n      <S.FooterButton>\r\n        <S.Button\r\n          onClick={() => {\r\n            handleOpenEmailModal();\r\n          }}\r\n          showEmailModal={showEmailModal}\r\n          loading={loading}\r\n        >\r\n          Send by email\r\n        </S.Button>\r\n      </S.FooterButton>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter, Routes as Router, Route } from \"react-router-dom\";\r\n\r\nimport List from \"../pages/List/List\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Router>\r\n        <Route path=\"/\" element={<List />} />\r\n      </Router>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport GlobalStyle from \"./styles/global\";\n\nimport Routes from \"./routes\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./styles/theme\";\nimport { Toast } from \"./components\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Toast />\n\n      <Routes />\n      <GlobalStyle />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}